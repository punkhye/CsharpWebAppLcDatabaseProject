@model IEnumerable<S.Data.Entities.Screening>
﻿@using X.PagedList;
@using X.PagedList.Mvc.Core;
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@using Microsoft.AspNetCore.Identity


@{
    ViewData["Title"] = "Index";

    var searchMovieId = ViewBag.MoviesIdSearch;
    var searchCinemaId = ViewBag.CinemaIdSearch;

    var queryTicketPriceParams = new Dictionary<string, string>
{
    { "sortOrder", ViewBag.TicketPriceParam },
    { "priceSort", ViewBag.TicketPriceParam },

};

    var queryScreeningDateParams = new Dictionary<string, string>
{
    { "sortOrder", ViewBag.ScreeningDateParam },
    { "dateSort", ViewBag.ScreeningDateParam },

};


}

<h1>Screenings</h1>

@if (User.IsInRole("Admin"))
{
    <p>
        <form> <button class="btn btn-primary" asp-action="Create"> >Create an event</button></form>
    </p>
    <br></br>
}

@if (SignInManager.IsSignedIn(User))
{
    <div class="row">
        <form asp-action="Index">

            <select asp-for="@searchMovieId" class="form-control" asp-items="(IEnumerable<SelectListItem>)ViewBag.Movies"></select>

            <button class="btn btn-primary"><i class="bi bi-search"></i>Fillter by a movie</button>

        </form>
    </div>

    <br></br>

    <div class="row">
        <form asp-action="Index">

            <select asp-for="@searchCinemaId" class="form-control" asp-items="(IEnumerable<SelectListItem>)ViewBag.Cinemas"></select>

            <button class="btn btn-primary"><i class="bi bi-search"></i>Fillter by a cinema</button>

        </form>
    </div>

    <br></br>

    <div>
        <a asp-action="Index" class="text-dark">Back to the full list. </a>
    </div>
}


<table class="table table-striped table-hover table-bordered">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Movie)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cinema)
            </th>
            <th>
                @* @Html.DisplayNameFor(model => model.ScreeningDate) *@
                @if (SignInManager.IsSignedIn(User)){
                    <a asp-action="Index" asp-all-route-data="queryScreeningDateParams">Screening Date</a>
                }else{
                    @Html.DisplayNameFor(model => model.ScreeningDate)
                }

            </th>
            <th>
                @Html.DisplayNameFor(model => model.NumberOfSeats)
            </th>
            <th>
                @* @Html.DisplayNameFor(model => model.TicketPrice) *@
                @if (SignInManager.IsSignedIn(User)){
                    <a asp-action="Index" asp-all-route-data="queryTicketPriceParams">Ticket Price</a>
                }else{
                    @Html.DisplayNameFor(model => model.TicketPrice)
                }

            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model) {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Movie.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Cinema.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ScreeningDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NumberOfSeats)
                </td>
                <td>

                    @Html.DisplayFor(modelItem => item.TicketPrice, new { type = "number", step = "0.01" }) лв
                </td>
                @if (User.IsInRole("Admin"))
                {
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ScreeningId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.ScreeningId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.ScreeningId">Delete</a>
            </td>
            }
        </tr>
}
    </tbody>
</table>

@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page, sortOrderTicket = ViewBag.TicketPriceParam, sortOrder = ViewBag.ScreeningDateSortParam }))